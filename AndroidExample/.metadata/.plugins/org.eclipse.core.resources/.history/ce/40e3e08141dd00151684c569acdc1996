package com.example.exam19_gcmclient;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gcm.server.Message;
import com.google.android.gcm.server.MulticastResult;
import com.google.android.gcm.server.Sender;
import com.google.android.gms.gcm.GoogleCloudMessaging;

import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Random;

/**
 * �뫖�떆 硫붿떆吏�瑜� 諛쏅뒗 履쎌뿉�꽌 �떒留� �벑濡앺븯怨�, �뫖�떆 硫붿떆吏�瑜� 蹂대궡�뒗 履쎌뿉�꽌 硫붿떆吏�瑜� 蹂대궡硫�, �뫖�떆 硫붿떆吏�瑜� 諛쏅뒗 履쎌뿉�꽌 硫붿떆吏�瑜� 諛쏆븘 �솕硫댁뿉 蹂댁뿬二쇰뒗 怨쇱젙�쓣 �븣 �닔 �엳�뒿�땲�떎.
 * �씠 �삁�젣�뒗 �뫖�떆 �꽌鍮꾩뒪瑜� 諛쏅뒗 履쎄낵 蹂대궡�뒗 履쎌씠 �븯�굹濡� �빀爾먯쭊 寃껋쑝濡�,
 * �떎�젣 �빋�뿉�꽌�뒗 諛쏅뒗 履쎌쓽 湲곕뒫�쓣 �븯�굹�쓽 �빋�쑝濡�, 蹂대궡�뒗 履쎌쓽 湲곕뒫�쓣 �븯�굹�쓽 �빋�쑝濡� 遺꾨━�븯�뿬�빞 �빀�땲�떎.
 *
 * @author Mike
 *
 */
public class MainActivity extends Activity {
    public static final String TAG = "MainActivity";

    EditText messageInput;
    TextView messageOutput;

    /**
     * �꽌踰� : Sender 媛앹껜 �꽑�뼵
     */
    Sender sender;

    Handler handler = new Handler();

    /**
     * collapseKey �꽕�젙�쓣 �쐞�븳 Random 媛앹껜
     */
    private Random random ;

    /**
     * 援ш� �꽌踰꾩뿉 硫붿떆吏� 蹂닿��븯�뒗 湲곌컙(珥덈떒�쐞濡� 4二쇨퉴吏� 媛��뒫)
     */
    private int TTLTime = 60;

    /**
     * �떒留먭린�뿉 硫붿떆吏� �쟾�넚 �옱�떆�룄 �슏�닔
     */
    private	int RETRY = 3;

    /*
     * �벑濡앸맂 ID ���옣
     */
    ArrayList<String> idList = new ArrayList<String>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // �꽌踰� : GOOGLE_API_KEY瑜� �씠�슜�빐 Sender 珥덇린�솕
        sender = new Sender(GCMInfo.GOOGLE_API_KEY);

        // �꽌踰� : �쟾�넚�븷 硫붿떆吏� �엯�젰 諛뺤뒪
        messageInput = (EditText) findViewById(R.id.messageInput);

        // �닔�떊�븷 硫붿떆吏� 異쒕젰 諛뺤뒪
        messageOutput = (TextView) findViewById(R.id.messageOutput);


        // �떒留� �벑濡앺븯湲� 踰꾪듉
        Button registerButton = (Button) findViewById(R.id.registerButton);
        registerButton.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                try {
                    // �떒留� �벑濡앺븯怨� �벑濡� ID 諛쏄린
                    registerDevice();

                } catch(Exception ex) {
                    ex.printStackTrace();
                }
            }
        });

        // �꽌踰� : �쟾�넚�븯湲� 踰꾪듉
        Button sendButton = (Button) findViewById(R.id.sendButton);
        sendButton.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                String data = messageInput.getText().toString();

                sendToDevice(data);
            }
        });

        // �씤�뀗�듃瑜� �쟾�떖諛쏅뒗 寃쎌슦
        Intent intent = getIntent();
        if (intent != null) {
            processIntent(intent);
        }
    }

    /**
     * �떒留� �벑濡�
     */
    private void registerDevice() {

        RegisterThread registerObj = new RegisterThread();
        registerObj.start();

    }

    /**
     * �뫖�떆 硫붿떆吏� �쟾�넚
     */
    private void sendToDevice(String data) {

        SendThread thread = new SendThread(data);
        thread.start();

    }

    class RegisterThread extends Thread {
        public void run() {

            try {
                GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(getApplicationContext());
                String regId = gcm.register(GCMInfo.PROJECT_ID);
                println("�뫖�떆 �꽌鍮꾩뒪瑜� �쐞�빐 �떒留먯쓣 �벑濡앺뻽�뒿�땲�떎.");
                println("�벑濡� ID : " + regId);

                // �벑濡� ID 由ъ뒪�듃�뿉 異붽� (�쁽�옱�뒗 1媛쒕쭔)
                idList.clear();
                idList.add(regId);

            } catch(Exception ex) {
                ex.printStackTrace();
            }

        }
    }

    private void println(String msg) {
        final String output = msg;
        handler.post(new Runnable() {
            public void run() {
                Log.d(TAG, output);
                Toast.makeText(getApplicationContext(), output, Toast.LENGTH_LONG).show();
            }
        });
    }

    /**
     * GCM 硫붿떆吏� �쟾�넚�쓣 �쐞�븳 �뒪�젅�뱶
     */
    class SendThread extends Thread {
        String data;

        public SendThread(String inData) {
            data = inData;
        }

        public void run() {

            try {
                sendText(data);
            } catch(Exception ex) {
                ex.printStackTrace();
            }

        }

        public void sendText(String msg)
                throws Exception
        {

            if( random == null){
                random = new Random(System.currentTimeMillis());
            }

            String messageCollapseKey = String.valueOf(Math.abs(random.nextInt()));

            try {
                // �뫖�떆 硫붿떆吏� �쟾�넚�쓣 �쐞�븳 硫붿떆吏� 媛앹껜 �깮�꽦 諛� �솚寃� �꽕�젙
                Message.Builder gcmMessageBuilder = new Message.Builder();
                gcmMessageBuilder.collapseKey(messageCollapseKey).delayWhileIdle(true).timeToLive(TTLTime);
                gcmMessageBuilder.addData("type","text");
                gcmMessageBuilder.addData("command", "show");
                gcmMessageBuilder.addData("data", URLEncoder.encode(data, "UTF-8"));

                Message gcmMessage = gcmMessageBuilder.build();

                // �뿬�윭 �떒留먯뿉 硫붿떆吏� �쟾�넚 �썑 寃곌낵 �솗�씤
                MulticastResult resultMessage = sender.send(gcmMessage, idList, RETRY);
                String output = "GCM �쟾�넚 硫붿떆吏� 寃곌낵 => " + resultMessage.getMulticastId()
                        + "," + resultMessage.getRetryMulticastIds() + "," + resultMessage.getSuccess();

                println(output);

            } catch(Exception ex) {
                ex.printStackTrace();

                String output = "GCM 硫붿떆吏� �쟾�넚 怨쇱젙�뿉�꽌 �뿉�윭 諛쒖깮 : " + ex.toString();
                println(output);

            }

        }
    }

    @Override
    protected void onNewIntent(Intent intent) {
        Log.d(TAG, "onNewIntent() called.");

        processIntent(intent);

        super.onNewIntent(intent);
    }

    /**
     * �닔�떊�옄濡쒕��꽣 �쟾�떖諛쏆� Intent 泥섎━
     *
     * @param intent
     */
    private void processIntent(Intent intent) {
        String from = intent.getStringExtra("from");
        if (from == null) {
            Log.d(TAG, "from is null.");
            return;
        }

        String command = intent.getStringExtra("command");
        String type = intent.getStringExtra("type");
        String data = intent.getStringExtra("data");

        println("DATA : " + command + ", " + type + ", " + data);
        messageOutput.setText("[" + from + "]濡쒕��꽣 �닔�떊�븳 �뜲�씠�꽣 : " + data);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
